/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventarioh.MenuBar.Configuracion;

import DB.Status;
import DB.Ubicacion;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.concurrent.Callable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

/**
 *
 * @author Usuario
 */
public class Agregar_estatus extends javax.swing.JFrame {
    //Combobox de Familia
    java.awt.List Estatus = null;
    javax.swing.JComboBox select_estatus_anterior = null;
    //Nuevo ResultSet
    ResultSet rs = null;
    //Variable conexion a la DB
    Connection con = null;
    //Nuevo Callable
    Callable funciones;
    int id_number;
    /**
     * Creates new form Agregar_estatus
     */
    public Agregar_estatus(javax.swing.JComboBox select,java.awt.List estatus, Connection con, Callable hola ) throws SQLException {
        initComponents();

        this.setTitle("Nuevo  Estatus");
        //Le igualamos el combobox de la lista de familias
        this.Estatus = estatus;
        this.select_estatus_anterior = select;
        //Conexion
        this.con = con;
        //Igualamos las funciones a nuestra variable
        this.funciones = hola;
        
                //Combobox Ubicacion
        Status ub = new Status(con);
        //Se obtienen todas las descripciones de las ubicacion
        rs = ub.getAllid_ubicacion();
        
        if(rs.last()){
            this.id_number = rs.getInt("idEstatus_ubicacion") + 1;
            this.id.setText(Integer.toString(id_number));
            this.id.setBackground(Color.lightGray);
            this.id.setDisabledTextColor(Color.black);
            this.id.enable(false);
        }else{
            this.id_number =  1;
            this.id.setText(Integer.toString(id_number));
            this.id.setBackground(Color.lightGray);
            this.id.setDisabledTextColor(Color.black);
            this.id.enable(false);            
        }
        //Seteamos la Operacion de cierre, a solo esconder este frame
        this.setDefaultCloseOperation(WindowConstants.HIDE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        agregar = new javax.swing.JButton();
        descripcion = new javax.swing.JTextField();
        select_estatus = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("(*)Descripcion:");

        jLabel2.setText("(*)ID:");

        agregar.setText("Agregar");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        select_estatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ubicacion", "Fisico" }));
        select_estatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_estatusActionPerformed(evt);
            }
        });

        jLabel3.setText("Tipo:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(agregar)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(select_estatus, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(descripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                                .addComponent(id)))))
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(select_estatus, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(agregar)
                .addGap(30, 30, 30))
        );

        setSize(new java.awt.Dimension(416, 234));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        //Nueva clase Familia
        Status cat = new Status(this.con);
        //Si el JtextField esta NO esta vacio
        if(this.descripcion.getText().replaceAll(" ", "").length() != 0){
            if(this.select_estatus.getSelectedItem().equals("Ubicacion")){
                //Si se guarda Existosamente en la DB
              if(cat.insertar_estatus_ubicacion(this.descripcion.getText().toString()) ){
                    //Mensaje de Exito
                    JOptionPane.showMessageDialog(null, "Estatus agregada Exitosamente");
                    //Buscamos todas las Estatus actualizadas
                    this.rs  = cat.getAll_ubicacion();
                    //Removemos los Items que hay en el JComboBox Estatus
                    this.Estatus.removeAll();
                    this.select_estatus_anterior.setSelectedIndex(0);
                    try {
                        //Llamamos a las funciones de borrar y reanudar
                        this.funciones.call();
                        //Ventana actual
                        this.descripcion.setText("");
                        rs = cat.getAllid_ubicacion();

                        if(rs.last()){
                            this.id_number = rs.getInt("idEstatus_ubicacion") + 1;
                            this.id.setText(Integer.toString(id_number));
                            this.id.setBackground(Color.lightGray);
                            this.id.setDisabledTextColor(Color.black);
                            this.id.enable(false);            
                        }else{
                            this.id_number =  1;
                            this.id.setText(Integer.toString(id_number));
                            this.id.setBackground(Color.lightGray);
                            this.id.setDisabledTextColor(Color.black);
                            this.id.enable(false);            
                        }

                    } catch (Exception ex) {
                        Logger.getLogger(Agregar_estatus.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                    //Mesanje de Error al introducir
                    JOptionPane.showMessageDialog(null, "No se agrego el estatus.","Error al agregar"
                        ,JOptionPane.ERROR_MESSAGE);
                }                
            }else{
                //Si se guarda Existosamente en la DB
                if(cat.insertar_estatus_fisico(this.descripcion.getText().toString()) ){
                    //Mensaje de Exito
                    JOptionPane.showMessageDialog(null, "Estatus agregada Exitosamente");
                    //Buscamos todas las Estatus actualizadas
                    this.rs  = cat.getAll_fisico();
                    //Removemos los Items que hay en el JComboBox Estatus
                    this.Estatus.removeAll();
                    this.select_estatus_anterior.setSelectedIndex(1);
                    try {
                        //Llamamos a las funciones de borrar y reanudar
                        this.funciones.call();
                        //Ventana actual
                        this.descripcion.setText("");
                        rs = cat.getAllid_fisico();

                        if(rs.last()){
                            this.id_number = rs.getInt("idEstatus_fisico") + 1;
                            this.id.setText(Integer.toString(id_number));
                            this.id.setBackground(Color.lightGray);
                            this.id.setDisabledTextColor(Color.black);
                            this.id.enable(false);            
                        }else{
                            this.id_number =  1;
                            this.id.setText(Integer.toString(id_number));
                            this.id.setBackground(Color.lightGray);
                            this.id.setDisabledTextColor(Color.black);
                            this.id.enable(false);            
                        }
                    } catch (Exception ex) {
                        Logger.getLogger(Agregar_estatus.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                    //Mesanje de Error al introducir
                    JOptionPane.showMessageDialog(null, "No se agrego el estatus.","Error al agregar"
                        ,JOptionPane.ERROR_MESSAGE);
                }                 
            }
      
        }else{
            //Mensaje de Error si no estan llenos los campos
            JOptionPane.showMessageDialog(null, "Llenar Todos los Campos (*)","Error al agregar"
                ,JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_agregarActionPerformed

    private void select_estatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_estatusActionPerformed
        //Combobox Ubicacion
        Status ub = new Status(con);
        
        if(this.select_estatus.getSelectedItem().equals("Ubicacion")){
            //Se obtienen todas las descripciones de las ubicacion
            rs = ub.getAllid_ubicacion();

            try {
                if(rs.last()){
                    this.id_number = rs.getInt("idEstatus_ubicacion") + 1;
                    this.id.setText(Integer.toString(id_number));
                    this.id.setBackground(Color.lightGray);
                    this.id.setDisabledTextColor(Color.black);
                    this.id.enable(false);            
                }else{
                    this.id_number =  1;
                    this.id.setText(Integer.toString(id_number));
                    this.id.setBackground(Color.lightGray);
                    this.id.setDisabledTextColor(Color.black);
                    this.id.enable(false);            
                }
            } catch (SQLException ex) {
                Logger.getLogger(Agregar_estatus.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            //Se obtienen todas las descripciones de las ubicacion
            rs = ub.getAllid_fisico();

            try {
                if(rs.last()){
                    this.id_number = rs.getInt("idEstatus_fisico") + 1;
                    this.id.setText(Integer.toString(id_number));
                    this.id.setBackground(Color.lightGray);
                    this.id.setDisabledTextColor(Color.black);
                    this.id.enable(false);               
                }else{
                    this.id_number =  1;
                    this.id.setText(Integer.toString(id_number));
                    this.id.setBackground(Color.lightGray);
                    this.id.setDisabledTextColor(Color.black);
                    this.id.enable(false);            
                }
            } catch (SQLException ex) {
                Logger.getLogger(Agregar_estatus.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_select_estatusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Agregar_estatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Agregar_estatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Agregar_estatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Agregar_estatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Agregar_estatus().setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JTextField descripcion;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox select_estatus;
    // End of variables declaration//GEN-END:variables
}
