/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventarioh.MenuBar.Configuracion;

import DB.Propietario;
import DB.Usuario;
import interfazNueva.menubar;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.concurrent.Callable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class AgregarPropietario extends javax.swing.JFrame {
    //Nueva statement
    public Statement stmt = null;
    //Nuevo ResultSet
    ResultSet rs = null;
    //Variable conexion a la DB
    Connection con = null;
    Callable refrescar = null;
    
    /**
     * Creates new form AgregarPropietario
     */
    public AgregarPropietario(Connection con, Callable refrescar) throws SQLException {
        initComponents();
        //Conexion a la DB
        this.con = con;
        stmt = con.createStatement();
        /* Titulo del Jframe */
        this.setTitle("Propietarios");
        //Combobox Propietarios
        Propietario ca = new Propietario(con);
        //Se obtienen todas las descripciones de las Propietarios
        rs = ca.getAll();
        this.refrescar = refrescar;     
        // Anadimos cada una de las categorias al combobox Propietarios
        while(rs.next()){
            this.Propietarios.add(rs.getString("Razon_Social"));
        } 
      
        //Inicializaciones graficas de botones, jtextfields
        /************ Propieatorios *************/
            /* Botones */
        this.Guardar.setVisible(false);
        this.cancelar.setVisible(false);
        this.Editar.setVisible(false);
            /* Background */
        this.RIF_cedula.setBackground(Color.lightGray);
        this.razon.setBackground(Color.lightGray);
        this.contacto.setBackground(Color.lightGray);
        this.tlf1.setBackground(Color.lightGray);
        this.tlf2.setBackground(Color.lightGray);
        this.email.setBackground(Color.lightGray);
            /* Color del texto en Disabled */
        this.RIF_cedula.setDisabledTextColor(Color.black);
        this.razon.setDisabledTextColor(Color.black);
        this.contacto.setDisabledTextColor(Color.black);
        this.tlf1.setDisabledTextColor(Color.black);
        this.tlf2.setDisabledTextColor(Color.black);
        this.email.setDisabledTextColor(Color.black);
        /* Combobox */
         if (stmt.execute("SELECT username " +
                           "FROM usuario " +
                           "WHERE usuario.Email NOT IN (SELECT Email FROM propietario)")) {
                rs = stmt.getResultSet();
                // Añadimos cada una de las categorias al combobox Categoria
                while(rs.next()){
                    System.out.println("usuarios: " + rs.getString("username"));
                    usuarios.addItem(rs.getString("username"));
                }
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cancelar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        contacto = new javax.swing.JTextField();
        RIF_cedula = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Guardar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Editar = new javax.swing.JButton();
        Propietarios = new java.awt.List();
        jLabel3 = new javax.swing.JLabel();
        razon = new javax.swing.JTextField();
        usuarios = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        tlf1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tlf2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        nuevo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        jLabel6.setText("Propietarios:");

        contacto.setEnabled(false);

        RIF_cedula.setEnabled(false);

        jLabel2.setText("Persona Contacto:");

        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        jLabel1.setText("RIF/Cedula:");

        Editar.setText("Editar");
        Editar.setPreferredSize(new java.awt.Dimension(71, 23));
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });

        Propietarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PropietariosActionPerformed(evt);
            }
        });

        jLabel3.setText("Razón Social/Nombre:");

        razon.setEnabled(false);

        usuarios.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        usuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuariosActionPerformed(evt);
            }
        });

        jLabel7.setText("Usuarios:");

        jLabel4.setText("Tlf1:");

        email.setEnabled(false);

        tlf1.setEnabled(false);

        jLabel5.setText("Email:");

        tlf2.setEnabled(false);

        jLabel8.setText("Tlf2:");

        nuevo.setText("Nuevo");
        nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Propietarios, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(77, 77, 77))
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(280, 280, 280)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tlf1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(108, 108, 108)
                                        .addComponent(contacto, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(218, 218, 218)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(razon, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                        .addComponent(usuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(RIF_cedula)))
                                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tlf2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cancelar)
                                .addGap(18, 18, 18)
                                .addComponent(nuevo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Guardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Editar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(37, 37, 37))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(RIF_cedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(razon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(contacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tlf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tlf2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Editar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cancelar)
                            .addComponent(Guardar)
                            .addComponent(nuevo)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Propietarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(22, 22, 22))
        );

        setSize(new java.awt.Dimension(619, 396));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        //Reanudo los campos de Categoria a deshabilitados
        this.reanudar();
    }//GEN-LAST:event_cancelarActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        //Clase Propietario
        Propietario cat = new Propietario(con);
        //Si ya existe el RIF/Cedula
        if(cat.exist(Integer.parseInt(this.RIF_cedula.getText()))){
             //Si se actualiza la Propietario Exitosamente
             if(cat.actualizar(this.razon.getText().toString(),Integer.parseInt(this.RIF_cedula.getText()),this.contacto.getText().toString(),
                     this.email.getText().toString(),this.tlf1.getText().toString(),this.tlf2.getText().toString())){
                try {
                    this.refrescar.call();
                } catch (Exception ex) {
                    Logger.getLogger(AgregarPropietario.class.getName()).log(Level.SEVERE, null, ex);
                }
                 JOptionPane.showMessageDialog(null, "Propietario actualizado Exitosamente");
             }else{
                 JOptionPane.showMessageDialog(null, "No se actualizo el propietario.","Error al actualizar"
                     ,JOptionPane.ERROR_MESSAGE);
             }    
        }else{
            //Si se Guarda la Propietario Exitosamente
            if(cat.agregar(this.razon.getText().toString(),Integer.parseInt(this.RIF_cedula.getText()),this.contacto.getText().toString(),
                     this.email.getText().toString(),this.tlf1.getText().toString(),this.tlf2.getText().toString())){
                try {
                    this.refrescar.call();
                } catch (Exception ex) {
                    Logger.getLogger(AgregarPropietario.class.getName()).log(Level.SEVERE, null, ex);
                }
                 JOptionPane.showMessageDialog(null, "Propietario agregado Exitosamente");
            }else{
                 JOptionPane.showMessageDialog(null, "No se agrego el propietario.","Error al agregar"
                     ,JOptionPane.ERROR_MESSAGE);
             }    
        }
        //Remueve todos los Items del ComboBox Propietario
        this.Propietarios.removeAll();
        //Y se agregan las nuevas categorias al comboBox pero actualizado
        try {
            this.refrescar.call();
            //Nueva Clase Categoria
            Propietario ca = new Propietario(con);
            //Se obtienen todas las descripciones de las Propietario
            rs = ca.getAll();
            // Anadimos cada una de las categorias al combobox Propietario
            while(rs.next()){
                this.Propietarios.add(rs.getString("Razon_social"));
            }
            /* Combobox */

            DefaultComboBoxModel model = new DefaultComboBoxModel();
            
            if (stmt.execute("SELECT username " +
                               "FROM usuario " +
                               "WHERE usuario.Email NOT IN (SELECT Email FROM propietario)")) {
                    rs = stmt.getResultSet();
                    // Añadimos cada una de las categorias al combobox Categoria
                    model.addElement("-");
                    while(rs.next()){
                        System.out.println("usuarios: " + rs.getString("username"));
                        model.addElement(rs.getString("username"));
                    }
            }else{
                model.addElement("-");
            }    
            usuarios.setModel( model );
            
        } catch (SQLException ex) {
            Logger.getLogger(AgregarPropietario.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(AgregarPropietario.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Se borran los campos decripcion y id de categorias
        this.borrarS();
        //Se borran los campos descripcion, id, codigo de Subcategorias
        this.reanudar();
    }//GEN-LAST:event_GuardarActionPerformed

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
        //Si en el Combobox Categorias hay items, la funcion editar servira
        //Habilita los campos de descripcion y los botones de guardar y cancelar
        if(this.Propietarios.getSelectedIndex() != -1 || this.usuarios.getSelectedIndex() != 0){
            this.email.enable(true);
            this.RIF_cedula.enable(true);
            this.nuevo.setVisible(false);
            this.contacto.enable(true);
            this.razon.enable(true);
            this.tlf1.enable(true);
            this.tlf2.enable(true);
            this.Guardar.setVisible(true);
            this.cancelar.setVisible(true);
            this.Editar.setVisible(false);
            this.contacto.setBackground(Color.white);
            this.email.setBackground(Color.white);
            this.RIF_cedula.setBackground(Color.white);
            this.razon.setBackground(Color.white);
            this.tlf1.setBackground(Color.white);
            this.tlf2.setBackground(Color.white);
        }
    }//GEN-LAST:event_EditarActionPerformed

    private void PropietariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PropietariosActionPerformed
        if(this.Propietarios.getItemCount() != 0){//Entra en la condicion si hay mas de un Item en el ComboBox
            //Buscar el id de Categoria con respecto a la descripcion
            Propietario cat = new Propietario(con);

            //Busqueda de DB, para la categoria seleccionada, y llenar los campos
            ResultSet cate = cat.getPropietario(Propietarios.getSelectedItem().toString());
            try {
                this.RIF_cedula.setText(cate.getString("Rif_Cedula"));
                this.contacto.setText(cate.getString("Persona_contacto"));
                this.razon.setText(cate.getString("Razon_Social"));
                this.tlf1.setText(cate.getString("Tlf_1"));
                this.tlf2.setText(cate.getString("Tlf_2"));
                this.email.setText(cate.getString("Email"));
            } catch (SQLException ex) {
                Logger.getLogger(AgregarPropietario.class.getName()).log(Level.SEVERE, null, ex);
            }

            //Cambios graficos al cambiar una categoria
            this.reanudar();
        }
    }//GEN-LAST:event_PropietariosActionPerformed

    private void usuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuariosActionPerformed
        if(!usuarios.getSelectedItem().equals("-")){
            Usuario usuario = new Usuario(con,(String) usuarios.getSelectedItem());
            this.contacto.setText(usuario.getNombre()+" "+usuario.getApellido());
            this.email.setText(usuario.getEmail());
            this.tlf1.setText(usuario.getTlf_1());
            this.tlf2.setText(usuario.getTlf_2());
            this.RIF_cedula.setText("");
            this.razon.setText(usuario.getNombre()+" "+usuario.getApellido());
        }
        this.reanudar();
        
    }//GEN-LAST:event_usuariosActionPerformed

    private void nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoActionPerformed
       
            this.email.enable(true);
            this.RIF_cedula.enable(true);
            this.nuevo.setVisible(false);
            this.contacto.enable(true);
            this.razon.enable(true);
            this.tlf1.enable(true);
            this.tlf2.enable(true);
            this.Guardar.setVisible(true);
            this.cancelar.setVisible(true);
            this.Editar.setVisible(false);
            this.contacto.setBackground(Color.white);
            this.email.setBackground(Color.white);
            this.RIF_cedula.setBackground(Color.white);
            this.razon.setBackground(Color.white);
            this.tlf1.setBackground(Color.white);
            this.tlf2.setBackground(Color.white);
            borrarS();
    }//GEN-LAST:event_nuevoActionPerformed
    /* Reanudar la seccion de Categorias a deshabilitado */
    public void reanudar(){
        this.Guardar.setVisible(false);
        this.cancelar.setVisible(false);
        this.Editar.setVisible(true); 
        this.nuevo.setVisible(true);
        this.contacto.setBackground(Color.lightGray);
        this.email.setBackground(Color.lightGray);
        this.RIF_cedula.setBackground(Color.lightGray);
        this.razon.setBackground(Color.lightGray);
        this.tlf1.setBackground(Color.lightGray);
        this.tlf2.setBackground(Color.lightGray);
    }
    /* Borrar los JtextFields de Categorias */
    public void borrarS(){
        this.RIF_cedula.setText("");
        this.razon.setText("");
        this.contacto.setText("");
        this.email.setText("");
        this.tlf1.setText("");
        this.tlf2.setText("");
    }  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarPropietario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarPropietario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarPropietario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarPropietario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
           /* public void run() {
                new AgregarPropietario().setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Editar;
    private javax.swing.JButton Guardar;
    private java.awt.List Propietarios;
    private javax.swing.JTextField RIF_cedula;
    private javax.swing.JButton cancelar;
    private javax.swing.JTextField contacto;
    private javax.swing.JTextField email;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JButton nuevo;
    private javax.swing.JTextField razon;
    private javax.swing.JTextField tlf1;
    private javax.swing.JTextField tlf2;
    private javax.swing.JComboBox usuarios;
    // End of variables declaration//GEN-END:variables
}
