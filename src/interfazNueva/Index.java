/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package interfazNueva;

import DB.Bien;
import DB.Cambios;
import DB.Movilizacion;
import DB.Proveedor;
import DB.Status;
import DB.Ubicacion;
import DB.Usuario;
import conexion.conexionDB;
import inventarioh.InventarioH;
import inventarioh.MenuBar.Configuracion.AgregarEditar_estatus;
import inventarioh.MenuBar.Configuracion.AgregarEditar_familia;
import inventarioh.MenuBar.Configuracion.AgregarEditar_ubicacion;
import inventarioh.MenuBar.Configuracion.AgregarPropietario;
import inventarioh.MenuBar.Proveedores_Donantes.AgregarEditar_proveedor;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UnsupportedLookAndFeelException;
import seguridad.agregarEditar_usuario;

/**
 *
 * @author Usuario
 */
public class Index extends javax.swing.JFrame {
    //Nueva statement
    private Statement stmt = null;
    //Nuevo ResultSet
    private ResultSet rs = null;
    //Variable conexion a la DB
    private Connection con = null;
    /**
     * Creates new form prueba_menu
     */
    Proveedor proveedor;
    Bien BienesBD;
    Movilizacion MovilizacionBD;
    boolean flag_nuevo = false;
    int idMovilizacion;
    String fisico_vij,ubicacion_vij,responsable_vij;
    int idCambiosMovilizacion;
    public Index(/*int tipo_usuario*/) {
        try {
            initComponents();
            proveedor = new Proveedor(con);
            conexionDB conexion = new conexionDB();
            // Variable Connection, pasarsela a todas las vistas
            con = conexion.conexion();
            stmt = con.createStatement();
            this.setExtendedState(Index.MAXIMIZED_BOTH);
            iniciar_panel();
            iniciar_agregarActivo ();
            BienesBD = new Bien(con);
            MovilizacionBD = new Movilizacion(con);
            acomodar_movilizaciones();
            deshabilitar_movilizacion();
            
            /*if( tipo_usuario == 0){
                tipo_usuario();
            }*/
            
        } catch (SQLException ex) {
            Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        PanelPrincipal = new javax.swing.JPanel();
        PanelBienes = new javax.swing.JTabbedPane();
        agregarActivoPanel = new javax.swing.JPanel();
        guardarBtn = new javax.swing.JButton();
        BienPanel = new javax.swing.JPanel();
        codigoTxt = new javax.swing.JTextField();
        CodigoLbl = new javax.swing.JLabel();
        NombreLbl = new javax.swing.JLabel();
        nombreTxt = new javax.swing.JTextField();
        categoriaCmBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        proveedorCmBox = new javax.swing.JComboBox();
        ProveedorLbl = new javax.swing.JLabel();
        ubicacionCmBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        PrecioRefLbl = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        precioRefText = new javax.swing.JTextField();
        costo_actual = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Descripcion = new javax.swing.JTextArea();
        FechaAdquiLbl = new javax.swing.JLabel();
        fechaAdqiDChoser = new com.toedter.calendar.JDateChooser();
        EstadosPanel = new javax.swing.JPanel();
        StatusUbiLbl = new javax.swing.JLabel();
        StatusFisicoLbl = new javax.swing.JLabel();
        statusUbiCmbox = new javax.swing.JComboBox();
        statusFisicoCmbox = new javax.swing.JComboBox();
        UsuariosPanel = new javax.swing.JPanel();
        responsableCmbox = new javax.swing.JComboBox();
        ResponsableLbl = new javax.swing.JLabel();
        Propietario = new javax.swing.JLabel();
        propietarioCmbox = new javax.swing.JComboBox();
        SalirBtn = new javax.swing.JButton();
        editarBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        bienes_Listar = new javax.swing.JList();
        SalirBtn1 = new javax.swing.JButton();
        EditarBtn1 = new javax.swing.JButton();
        BienPanel1 = new javax.swing.JPanel();
        CodigoLbl1 = new javax.swing.JLabel();
        NombreLbl1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ProveedorLbl1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Codigolbl = new javax.swing.JLabel();
        Nombrelbl = new javax.swing.JLabel();
        Proveedorlbl = new javax.swing.JLabel();
        Categorialbl = new javax.swing.JLabel();
        Ubicacionlbl = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        PrecioRefLbl1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        FechaAdquiLbl1 = new javax.swing.JLabel();
        EstadosPanel1 = new javax.swing.JPanel();
        StatusUbiLbl1 = new javax.swing.JLabel();
        StatusFisicoLbl1 = new javax.swing.JLabel();
        UbiStatlbl = new javax.swing.JLabel();
        FiscStalbl = new javax.swing.JLabel();
        UsuariosPanel1 = new javax.swing.JPanel();
        ResponsableLbl1 = new javax.swing.JLabel();
        Propietario1 = new javax.swing.JLabel();
        Responsablelbl = new javax.swing.JLabel();
        Propietariolbl = new javax.swing.JLabel();
        Preciolbl = new javax.swing.JLabel();
        Costolbl = new javax.swing.JLabel();
        Fechalbl = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Descripcion1 = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        bienes_Mover = new javax.swing.JList();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        movilizacionesList = new javax.swing.JList();
        jPanel6 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        descripcion_mover = new javax.swing.JLabel();
        resp_mover = new javax.swing.JLabel();
        codigo_mover = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        origen_moverCmBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        destino_moverCmBox = new javax.swing.JComboBox();
        jPanel7 = new javax.swing.JPanel();
        fecha_movilizacionCmBox = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        fecha_devolucionCmBox = new com.toedter.calendar.JDateChooser();
        Fecha = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        observacion_moverCmBox = new javax.swing.JTextArea();
        jLabel16 = new javax.swing.JLabel();
        motivo_moverComBox = new javax.swing.JComboBox();
        movilizacionChckBox = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        responsable_mover = new javax.swing.JComboBox();
        jScrollPane6 = new javax.swing.JScrollPane();
        detalle_mover = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        ubicacion_mover = new javax.swing.JComboBox();
        fisico_mover = new javax.swing.JComboBox();
        guardar_mover = new javax.swing.JButton();
        salirBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        familiaMenuItem = new javax.swing.JMenuItem();
        estatusMenuItem = new javax.swing.JMenuItem();
        propietarioMenuItem = new javax.swing.JMenuItem();
        proveedoresMenuItem = new javax.swing.JMenuItem();
        ubicacionMenuItem = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PanelPrincipal.setLayout(new java.awt.GridLayout(1, 0));

        PanelBienes.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                PanelBienesStateChanged(evt);
            }
        });

        guardarBtn.setText("Guardar");
        guardarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarBtnActionPerformed(evt);
            }
        });

        BienPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Bien"));

        codigoTxt.setText("123");
        codigoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoTxtActionPerformed(evt);
            }
        });

        CodigoLbl.setText("(*)Codigo: ");

        NombreLbl.setText("(*)Nombre: ");

        nombreTxt.setText("Yanir");
        nombreTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreTxtActionPerformed(evt);
            }
        });

        categoriaCmBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriaCmBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("(*)Categoria:");

        proveedorCmBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proveedorCmBoxActionPerformed(evt);
            }
        });

        ProveedorLbl.setText("(*)Proveedor:");

        ubicacionCmBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubicacionCmBoxActionPerformed(evt);
            }
        });

        jLabel6.setText("(*)Ubicacion:");

        javax.swing.GroupLayout BienPanelLayout = new javax.swing.GroupLayout(BienPanel);
        BienPanel.setLayout(BienPanelLayout);
        BienPanelLayout.setHorizontalGroup(
            BienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BienPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(BienPanelLayout.createSequentialGroup()
                        .addComponent(ProveedorLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(proveedorCmBox, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(766, 766, 766))
                    .addGroup(BienPanelLayout.createSequentialGroup()
                        .addGroup(BienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(BienPanelLayout.createSequentialGroup()
                                .addComponent(CodigoLbl)
                                .addGap(51, 51, 51)
                                .addComponent(codigoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(314, 314, 314))
                            .addGroup(BienPanelLayout.createSequentialGroup()
                                .addComponent(NombreLbl)
                                .addGap(47, 47, 47)
                                .addComponent(nombreTxt)
                                .addGap(143, 143, 143)))
                        .addGroup(BienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3))
                        .addGap(67, 67, 67)
                        .addGroup(BienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(categoriaCmBox, 0, 324, Short.MAX_VALUE)
                            .addComponent(ubicacionCmBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(167, 167, 167))))
        );
        BienPanelLayout.setVerticalGroup(
            BienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BienPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(BienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BienPanelLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(BienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CodigoLbl)
                            .addComponent(codigoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(BienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(categoriaCmBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addGap(5, 5, 5)
                .addGroup(BienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BienPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(BienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(ubicacionCmBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(BienPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(BienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NombreLbl)
                            .addComponent(nombreTxt))))
                .addGap(23, 23, 23)
                .addGroup(BienPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProveedorLbl)
                    .addComponent(proveedorCmBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalles"));

        PrecioRefLbl.setText("Precio referencial:");

        jLabel8.setText("Costo actual:");

        precioRefText.setText("12345");
        precioRefText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precioRefTextActionPerformed(evt);
            }
        });

        costo_actual.setText("1234");
        costo_actual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costo_actualActionPerformed(evt);
            }
        });

        jLabel9.setText("Bs.");

        jLabel10.setText("Bs.");

        jLabel11.setText("Descripcion:");

        Descripcion.setColumns(20);
        Descripcion.setRows(5);
        jScrollPane1.setViewportView(Descripcion);

        FechaAdquiLbl.setText("Fecha de adquisicion:");

        EstadosPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Estados"));

        StatusUbiLbl.setText("Ubicación:");

        StatusFisicoLbl.setText("Físico:");

        javax.swing.GroupLayout EstadosPanelLayout = new javax.swing.GroupLayout(EstadosPanel);
        EstadosPanel.setLayout(EstadosPanelLayout);
        EstadosPanelLayout.setHorizontalGroup(
            EstadosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EstadosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EstadosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StatusFisicoLbl)
                    .addComponent(StatusUbiLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(EstadosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(statusUbiCmbox, 0, 249, Short.MAX_VALUE)
                    .addComponent(statusFisicoCmbox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        EstadosPanelLayout.setVerticalGroup(
            EstadosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EstadosPanelLayout.createSequentialGroup()
                .addGroup(EstadosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusUbiCmbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StatusUbiLbl))
                .addGap(18, 18, 18)
                .addGroup(EstadosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StatusFisicoLbl)
                    .addComponent(statusFisicoCmbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        UsuariosPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Usuarios"));

        responsableCmbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                responsableCmboxActionPerformed(evt);
            }
        });

        ResponsableLbl.setText("Responsable:");

        Propietario.setText("Propietario:");

        javax.swing.GroupLayout UsuariosPanelLayout = new javax.swing.GroupLayout(UsuariosPanel);
        UsuariosPanel.setLayout(UsuariosPanelLayout);
        UsuariosPanelLayout.setHorizontalGroup(
            UsuariosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UsuariosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UsuariosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ResponsableLbl)
                    .addComponent(Propietario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(UsuariosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(responsableCmbox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(propietarioCmbox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        UsuariosPanelLayout.setVerticalGroup(
            UsuariosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UsuariosPanelLayout.createSequentialGroup()
                .addGroup(UsuariosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ResponsableLbl)
                    .addComponent(responsableCmbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UsuariosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Propietario)
                    .addComponent(propietarioCmbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(FechaAdquiLbl)
                                .addGap(18, 18, 18)
                                .addComponent(fechaAdqiDChoser, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PrecioRefLbl)
                                    .addComponent(jLabel8))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(costo_actual, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(precioRefText, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel11))))))
                    .addComponent(EstadosPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UsuariosPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 993, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PrecioRefLbl)
                            .addComponent(precioRefText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(costo_actual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(FechaAdquiLbl)
                            .addComponent(fechaAdqiDChoser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(UsuariosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(EstadosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(10, 10, 10))
        );

        SalirBtn.setText("Salir");
        SalirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirBtnActionPerformed(evt);
            }
        });

        editarBtn.setText("Editar");
        editarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout agregarActivoPanelLayout = new javax.swing.GroupLayout(agregarActivoPanel);
        agregarActivoPanel.setLayout(agregarActivoPanelLayout);
        agregarActivoPanelLayout.setHorizontalGroup(
            agregarActivoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agregarActivoPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agregarActivoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BienPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agregarActivoPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editarBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guardarBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SalirBtn)
                .addContainerGap())
        );
        agregarActivoPanelLayout.setVerticalGroup(
            agregarActivoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agregarActivoPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(BienPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(agregarActivoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarBtn)
                    .addComponent(SalirBtn)
                    .addComponent(editarBtn))
                .addContainerGap(142, Short.MAX_VALUE))
        );

        PanelBienes.addTab("Agregar un activo", agregarActivoPanel);

        bienes_Listar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bienes_ListarMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(bienes_Listar);

        SalirBtn1.setText("Salir");
        SalirBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirBtn1ActionPerformed(evt);
            }
        });

        EditarBtn1.setText("Editar");

        BienPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Bien"));

        CodigoLbl1.setText("Codigo: ");

        NombreLbl1.setText("Nombre: ");

        jLabel4.setText("Categoria:");

        ProveedorLbl1.setText("Proveedor:");

        jLabel7.setText("Ubicación:");

        Codigolbl.setText("-");

        Nombrelbl.setText("-");

        Proveedorlbl.setText("-");

        Categorialbl.setText("-");

        Ubicacionlbl.setText("-");

        javax.swing.GroupLayout BienPanel1Layout = new javax.swing.GroupLayout(BienPanel1);
        BienPanel1.setLayout(BienPanel1Layout);
        BienPanel1Layout.setHorizontalGroup(
            BienPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BienPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BienPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BienPanel1Layout.createSequentialGroup()
                        .addComponent(ProveedorLbl1)
                        .addGap(18, 18, 18)
                        .addComponent(Proveedorlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BienPanel1Layout.createSequentialGroup()
                        .addComponent(NombreLbl1)
                        .addGap(18, 18, 18)
                        .addComponent(Nombrelbl))
                    .addGroup(BienPanel1Layout.createSequentialGroup()
                        .addComponent(CodigoLbl1)
                        .addGap(22, 22, 22)
                        .addComponent(Codigolbl, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(127, 127, 127)
                .addGroup(BienPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BienPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(Ubicacionlbl))
                    .addGroup(BienPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(Categorialbl)))
                .addContainerGap(742, Short.MAX_VALUE))
        );
        BienPanel1Layout.setVerticalGroup(
            BienPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BienPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(BienPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BienPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(BienPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CodigoLbl1)
                            .addComponent(Codigolbl)))
                    .addGroup(BienPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(Categorialbl)))
                .addGap(8, 8, 8)
                .addGroup(BienPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BienPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(BienPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(Ubicacionlbl)))
                    .addGroup(BienPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(BienPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NombreLbl1)
                            .addComponent(Nombrelbl))))
                .addGap(18, 18, 18)
                .addGroup(BienPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProveedorLbl1)
                    .addComponent(Proveedorlbl))
                .addGap(116, 116, 116))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalles"));

        PrecioRefLbl1.setText("Precio referencial:");

        jLabel12.setText("Costo actual:");

        FechaAdquiLbl1.setText("Fecha de adquisicion:");

        EstadosPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Estados"));

        StatusUbiLbl1.setText("Ubicación:");

        StatusFisicoLbl1.setText("Físico:");

        UbiStatlbl.setText("-");

        FiscStalbl.setText("-");

        javax.swing.GroupLayout EstadosPanel1Layout = new javax.swing.GroupLayout(EstadosPanel1);
        EstadosPanel1.setLayout(EstadosPanel1Layout);
        EstadosPanel1Layout.setHorizontalGroup(
            EstadosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EstadosPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EstadosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StatusUbiLbl1)
                    .addComponent(StatusFisicoLbl1))
                .addGap(18, 18, 18)
                .addGroup(EstadosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FiscStalbl)
                    .addComponent(UbiStatlbl))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        EstadosPanel1Layout.setVerticalGroup(
            EstadosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EstadosPanel1Layout.createSequentialGroup()
                .addGroup(EstadosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StatusUbiLbl1)
                    .addComponent(UbiStatlbl))
                .addGap(18, 18, 18)
                .addGroup(EstadosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StatusFisicoLbl1)
                    .addComponent(FiscStalbl))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        UsuariosPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Usuarios"));

        ResponsableLbl1.setText("Responsable:");

        Propietario1.setText("Propietario:");

        Responsablelbl.setText("-");

        Propietariolbl.setText("-");

        javax.swing.GroupLayout UsuariosPanel1Layout = new javax.swing.GroupLayout(UsuariosPanel1);
        UsuariosPanel1.setLayout(UsuariosPanel1Layout);
        UsuariosPanel1Layout.setHorizontalGroup(
            UsuariosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UsuariosPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UsuariosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ResponsableLbl1)
                    .addComponent(Propietario1))
                .addGap(18, 18, 18)
                .addGroup(UsuariosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Propietariolbl)
                    .addComponent(Responsablelbl))
                .addContainerGap(709, Short.MAX_VALUE))
        );
        UsuariosPanel1Layout.setVerticalGroup(
            UsuariosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UsuariosPanel1Layout.createSequentialGroup()
                .addGroup(UsuariosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ResponsableLbl1)
                    .addComponent(Responsablelbl))
                .addGap(18, 18, 18)
                .addGroup(UsuariosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Propietario1)
                    .addComponent(Propietariolbl))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        Preciolbl.setText("-");

        Costolbl.setText("-");

        Fechalbl.setText("-");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PrecioRefLbl1)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Costolbl)
                            .addComponent(Preciolbl)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(FechaAdquiLbl1)
                        .addGap(18, 18, 18)
                        .addComponent(Fechalbl, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(89, 89, 89)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UsuariosPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EstadosPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UsuariosPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PrecioRefLbl1)
                            .addComponent(Preciolbl))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(Costolbl))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FechaAdquiLbl1)
                            .addComponent(Fechalbl))))
                .addGap(18, 18, 18)
                .addComponent(EstadosPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Descripcion1.setColumns(20);
        Descripcion1.setRows(5);
        jScrollPane3.setViewportView(Descripcion1);

        jLabel13.setText("Descripcion:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3))
                    .addComponent(BienPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(1244, Short.MAX_VALUE)
                .addComponent(EditarBtn1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SalirBtn1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(BienPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)))
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SalirBtn1)
                    .addComponent(EditarBtn1))
                .addContainerGap())
        );

        PanelBienes.addTab("Lista de activos", jPanel2);

        bienes_Mover.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bienes_MoverMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(bienes_Mover);

        jLabel23.setText("Bienes");

        jLabel24.setText("Movilizaciones");

        movilizacionesList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                movilizacionesListMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(movilizacionesList);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addComponent(jScrollPane7)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel21.setText("Descripción:");

        jLabel22.setText("Responsable:");

        jLabel20.setText("Código:");

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Movilización"));

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Ubicación"));

        jLabel1.setText("Origen");

        jLabel2.setText("Destino");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(22, 22, 22)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(origen_moverCmBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(destino_moverCmBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(origen_moverCmBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(destino_moverCmBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Fechas"));

        jLabel5.setText("Fecha de devolución");

        Fecha.setText("Fecha de movilización");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(Fecha)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(23, 23, 23)))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fecha_devolucionCmBox, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                    .addComponent(fecha_movilizacionCmBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fecha_movilizacionCmBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Fecha))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fecha_devolucionCmBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel18.setText("Observaciones");

        observacion_moverCmBox.setColumns(20);
        observacion_moverCmBox.setRows(5);
        jScrollPane4.setViewportView(observacion_moverCmBox);

        jLabel16.setText("Motivo");

        movilizacionChckBox.setText("Ingresar una movilización");
        movilizacionChckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movilizacionChckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(movilizacionChckBox)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel16)
                                .addGap(35, 35, 35)
                                .addComponent(motivo_moverComBox, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(movilizacionChckBox, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(motivo_moverComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(65, 65, 65))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cambios"));

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalle de la movilización"));

        jLabel17.setText("Detalle");

        jLabel19.setText("Nuevo responsable");

        detalle_mover.setColumns(20);
        detalle_mover.setRows(5);
        jScrollPane6.setViewportView(detalle_mover);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addComponent(responsable_mover, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(responsable_mover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane6))
                .addContainerGap())
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Cambio de estatus"));

        jLabel14.setText("Ubicación");

        jLabel15.setText("Físico");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ubicacion_mover, 0, 235, Short.MAX_VALUE)
                    .addComponent(fisico_mover, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(ubicacion_mover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(fisico_mover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        guardar_mover.setText("Guardar");
        guardar_mover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardar_moverActionPerformed(evt);
            }
        });

        salirBtn.setText("Salir");
        salirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(18, 18, 18)
                        .addComponent(codigo_mover, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addComponent(jLabel22)
                        .addGap(18, 18, 18)
                        .addComponent(resp_mover, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addComponent(descripcion_mover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(guardar_mover)
                        .addGap(18, 18, 18)
                        .addComponent(salirBtn)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(codigo_mover, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22)))
                    .addComponent(resp_mover, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel21)
                    .addComponent(descripcion_mover, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardar_mover)
                    .addComponent(salirBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jScrollPane8.setViewportView(jPanel3);

        PanelBienes.addTab("Cambios y movilizaciones", jScrollPane8);

        PanelPrincipal.add(PanelBienes);

        getContentPane().add(PanelPrincipal, java.awt.BorderLayout.CENTER);

        jMenu1.setText("Bienes");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        familiaMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        familiaMenuItem.setText("Familia");
        familiaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                familiaMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(familiaMenuItem);

        estatusMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        estatusMenuItem.setText("Estatus");
        estatusMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estatusMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(estatusMenuItem);

        propietarioMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        propietarioMenuItem.setText("Propietario");
        propietarioMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                propietarioMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(propietarioMenuItem);

        proveedoresMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        proveedoresMenuItem.setText("Proveedores");
        proveedoresMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proveedoresMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(proveedoresMenuItem);

        ubicacionMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        ubicacionMenuItem.setText("Ubicación");
        ubicacionMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubicacionMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(ubicacionMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Cuentas");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Modficiar usuario");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
       /* Lista_activo ventana = new Lista_activo();
        ventana.setVisible(true);
        this.setVisible(false);*/
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void guardarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarBtnActionPerformed
        switch (guardarBtn.getText()){
            case "Guardar":
                

                //Si los campos codigo, nombre, categoria y subcategoria estan vacios, no entra
                if((codigoTxt.getText().replaceAll(" ", "").length() != 0) && (nombreTxt.getText().replaceAll(" ", "").length() != 0) &&
                        (categoriaCmBox.getSelectedItem().toString().replaceAll(" ", "").length() != 0) && fechaAdqiDChoser.getDate() != null){

                    SimpleDateFormat formato = new SimpleDateFormat("YYYY/MM/dd");
                    Bien nuevo = new Bien(codigoTxt.getText(), 
                    nombreTxt.getText(), 
                    (String) proveedorCmBox.getSelectedItem(),
                    (String) categoriaCmBox.getSelectedItem(), 
                    (String) ubicacionCmBox.getSelectedItem(),
                    precioRefText.getText(), 
                    costo_actual.getText(),
                    formato.format(fechaAdqiDChoser.getDate()),
                    (String) responsableCmbox.getSelectedItem(), 
                    (String) propietarioCmbox.getSelectedItem(), 
                    (String) statusUbiCmbox.getSelectedItem(),
                    (String) statusFisicoCmbox.getSelectedItem(), Descripcion.getText());

                    if(nuevo.insertar_activo()){
                        JOptionPane.showMessageDialog(null, "Activo agregado exitosamente.","Registro exitoso"
                                ,JOptionPane.INFORMATION_MESSAGE);
                    }else{

                        JOptionPane.showMessageDialog(null, "No se pudo registrar el Activo", "Error al registrar"
                                ,JOptionPane.ERROR_MESSAGE);

                    }    
                }else{
                        JOptionPane.showMessageDialog(null, "Los campos (*) deben estar rellenados.","Warning"
                                ,JOptionPane.WARNING_MESSAGE);

                }
            break;
            
            case "Aceptar":
                    
                //Si los campos codigo, nombre, categoria y subcategoria estan vacios, no entra
                if((codigoTxt.getText().replaceAll(" ", "").length() != 0) && (nombreTxt.getText().replaceAll(" ", "").length() != 0) &&
                        (categoriaCmBox.getSelectedItem().toString().replaceAll(" ", "").length() != 0) && fechaAdqiDChoser.getDate() != null){

                    SimpleDateFormat formato = new SimpleDateFormat("YYYY/MM/dd");
                    Bien nuevo = new Bien(codigoTxt.getText(), 
                    nombreTxt.getText(), 
                    (String) proveedorCmBox.getSelectedItem(),
                    (String) categoriaCmBox.getSelectedItem(), 
                    (String) ubicacionCmBox.getSelectedItem(),
                    precioRefText.getText(), 
                    costo_actual.getText(),
                    formato.format(fechaAdqiDChoser.getDate()),
                    (String) responsableCmbox.getSelectedItem(), 
                    (String) propietarioCmbox.getSelectedItem(), 
                    (String) statusUbiCmbox.getSelectedItem(),
                    (String) statusFisicoCmbox.getSelectedItem(), Descripcion.getText());

                    if(nuevo.actualizar_activo()){
                        JOptionPane.showMessageDialog(null, "Activo actualizado exitósamente.","Registro exitoso"
                                ,JOptionPane.INFORMATION_MESSAGE);
                        iniciar_agregarActivo();
                    }else{

                        JOptionPane.showMessageDialog(null, "No se pudo actualizar el activo", "Error al actualizar"
                                ,JOptionPane.ERROR_MESSAGE);

                    }    
                }else{
                        JOptionPane.showMessageDialog(null, "Los campos (*) deben estar rellenados.","Warning"
                                ,JOptionPane.WARNING_MESSAGE);

                }
            break;
        }

    }//GEN-LAST:event_guardarBtnActionPerformed

    private void codigoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoTxtActionPerformed

    private void nombreTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreTxtActionPerformed

    private void categoriaCmBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriaCmBoxActionPerformed

    }//GEN-LAST:event_categoriaCmBoxActionPerformed

    private void proveedorCmBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proveedorCmBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_proveedorCmBoxActionPerformed

    private void ubicacionCmBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubicacionCmBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ubicacionCmBoxActionPerformed

    private void precioRefTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precioRefTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_precioRefTextActionPerformed

    private void costo_actualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costo_actualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costo_actualActionPerformed

    private void responsableCmboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_responsableCmboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_responsableCmboxActionPerformed

    private void SalirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirBtnActionPerformed
        System.exit(0);
    }//GEN-LAST:event_SalirBtnActionPerformed

    private void SalirBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirBtn1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_SalirBtn1ActionPerformed

    private void familiaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_familiaMenuItemActionPerformed
        try {
            AgregarEditar_familia familia = new AgregarEditar_familia(con);
            familia.setVisible(true);
            familia.setLocationRelativeTo(null);
            familia.setResizable(false);
        } catch (SQLException ex) {
            Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_familiaMenuItemActionPerformed

    private void editarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarBtnActionPerformed
        SimpleDateFormat formato = new SimpleDateFormat("YYYY-MM-dd");
        
        switch (editarBtn.getText()){
            
            case "Editar":
                try {
                        rs = stmt.executeQuery("SELECT bien.Codigo, bien.Descripcion,bien.Descripcion_detallada, bien.Fecha_adquisicion, Precio_referencial_unitario, Precio_actual, familia.Descripcion, ubicacion.descripcion, proveedor_donante.Razon_social, usuario.Username, " +
                                                "propietario.Razon_social,estatus_cond_fisica.Descripcion, estatus_cond_ubicacion.Descripcion " +
                                                "FROM familia, ubicacion, proveedor_donante, usuario, propietario, estatus_cond_fisica, estatus_cond_ubicacion, bien " +
                                                "where bien.Codigo= '"+codigoTxt.getText()+"' " +
                                                "and idFamilia = bien.Familia " +
                                                "and ubicacion.idUbicacion = bien.Ubicacion " +
                                                "and proveedor_donante.idProveedor = bien.Proveedor_Donante_idProveedor " +
                                                "and usuario.idUsuario = bien.Responsable_uso " +
                                                "and propietario.Rif_Cedula = bien.Propietario " +
                                                "and estatus_cond_fisica.idEstatus_fisico = bien.Estatus_cond_fisica " +
                                                "and estatus_cond_ubicacion.idEstatus_ubicacion = bien.Estatus_cond_ubicacion ;");
                        rs.beforeFirst();

                        if(rs.next()){
                            /********** Aqui seteamos todos los campos con su informacion correspondiente de la BD *****************/
                            nombreTxt.setText(rs.getString("bien.Descripcion"));
                            categoriaCmBox.setSelectedItem(rs.getString("familia.Descripcion"));
                            ubicacionCmBox.setSelectedItem(rs.getString("ubicacion.descripcion"));
                            proveedorCmBox.setSelectedItem(rs.getString("proveedor_donante.Razon_social"));
                            precioRefText.setText(rs.getString("Precio_referencial_unitario"));
                            costo_actual.setText(rs.getString("Precio_actual"));
                            fechaAdqiDChoser.setDate(rs.getDate("bien.Fecha_adquisicion"));
                            responsableCmbox.setSelectedItem(rs.getString("usuario.Username"));
                            propietarioCmbox.setSelectedItem(rs.getString("proveedor_donante.Razon_social"));
                            ubicacionCmBox.setSelectedItem(rs.getString("estatus_cond_ubicacion.Descripcion"));
                            statusFisicoCmbox.setSelectedItem(rs.getString("estatus_cond_fisica.Descripcion"));
                            
                            guardarBtn.setText("Aceptar");
                            editarBtn.setText("atrás");
                            codigoTxt.setEditable(true);
                            agregarActivoPanel.revalidate();
                            agregarActivoPanel.repaint();

                        }else{
                            JOptionPane.showMessageDialog(null, "El codigo del bien ingresado no existe.","Error."
                                    ,JOptionPane.ERROR_MESSAGE);
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
                    }
                break;
                
            case "atrás":
                iniciar_agregarActivo();
                break;
        
        }
    }//GEN-LAST:event_editarBtnActionPerformed

    private void propietarioMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_propietarioMenuItemActionPerformed
        try {
            AgregarPropietario propietario = new AgregarPropietario(con);
            propietario.setVisible(true);
            propietario.setLocationRelativeTo(null);
            propietario.setResizable(false);
        } catch (SQLException ex) {
            Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_propietarioMenuItemActionPerformed

    private void estatusMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estatusMenuItemActionPerformed
        try {
            AgregarEditar_estatus estatus = new AgregarEditar_estatus(con);
            estatus.setVisible(true);
            estatus.setLocationRelativeTo(null);
            estatus.setResizable(false);
        } catch (SQLException ex) {
            Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_estatusMenuItemActionPerformed

    private void proveedoresMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proveedoresMenuItemActionPerformed
        try {
            AgregarEditar_proveedor proveedor = new AgregarEditar_proveedor(con);
            proveedor.setVisible(true);
            proveedor.setLocationRelativeTo(null);
            proveedor.setResizable(false);
        } catch (SQLException ex) {
            Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_proveedoresMenuItemActionPerformed

    private void ubicacionMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubicacionMenuItemActionPerformed
        try {
            AgregarEditar_ubicacion ubicacion = new AgregarEditar_ubicacion (con);
            ubicacion.setVisible(true);
            ubicacion.setLocationRelativeTo(null);
            ubicacion.setResizable(false);
        } catch (SQLException ex) {
            Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ubicacionMenuItemActionPerformed

    private void bienes_ListarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bienes_ListarMouseClicked
        if(this.bienes_Listar.getModel().getSize() != 0){//Entra en la condicion si hay mas de un Item en el ComboBox
            //Buscar el id de Categoria con respecto a la descripcion
            Bien cat = new Bien(con);

            //Busqueda de DB, para la categoria seleccionada, y llenar los campos
            String[] parts = this.bienes_Listar.getSelectedValue().toString().split("-");
            String[] space = parts[1].split(" ");
            System.out.println(parts[0] +"/"+ space[0]+"/");
            ResultSet cate = cat.getBien(parts[0],space[0]);
            try {
                this.Codigolbl.setText(cate.getString("codigo"));
                this.Nombrelbl.setText(cate.getString("descripcion"));
                this.Proveedorlbl.setText(cate.getString("proveedor"));
                this.Categorialbl.setText(cate.getString("Familia"));
                this.Ubicacionlbl.setText(cate.getString("con_ubi"));
                this.Preciolbl.setText(cate.getString("Precio_actual"));
                this.Costolbl.setText(cate.getString("Precio_referencial_unitario"));
                this.Fechalbl.setText(cate.getString("Fecha_adquisicion"));
                this.Descripcion.setText(cate.getString("Descripcion_detallada"));
                this.UbiStatlbl.setText(cate.getString("con_ubi"));
                this.FiscStalbl.setText(cate.getString("con_fis"));
                this.Responsablelbl.setText(cate.getString("us_nombre") +" " +cate.getString("us_apellido") );
                this.Propietariolbl.setText(cate.getString("propietario"));

            } catch (SQLException ex) {
                Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
           /* //Cambios graficos al cambiar una categoria
            this.reanudar();*/
    }//GEN-LAST:event_bienes_ListarMouseClicked

    private void PanelBienesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_PanelBienesStateChanged
       if(PanelBienes.getSelectedIndex() == 1){
           System.out.println(PanelBienes.getSelectedIndex());
            //Se inician las variables de listar
            iniciar_listar();
        } else if(PanelBienes.getSelectedIndex() == 2){ 
            //Se inician las variables de mover
            iniciar_mover();
        }
    }//GEN-LAST:event_PanelBienesStateChanged

    private void guardar_moverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardar_moverActionPerformed
        if(movilizacionChckBox.isSelected()){
            if(flag_nuevo){     //Nueva movilizacion
                //Si los campos codigo, fecha1, fecha2  estan vacios, no entra
                if((codigo_mover.getText().replaceAll(" ", "").length() != 0) && fecha_devolucionCmBox.getDate() != null
                        && fecha_movilizacionCmBox.getDate() != null){
                    SimpleDateFormat formato = new SimpleDateFormat("YYYY/MM/dd");
    /*
                    falta String Movilizacioncol,String username*/
                    Movilizacion nuevo = new Movilizacion(con, 
                    codigo_mover.getText(), 
                    (String) origen_moverCmBox.getSelectedItem(),
                    (String) destino_moverCmBox.getSelectedItem(), 
                    (String) motivo_moverComBox.getSelectedItem(),
                    detalle_mover.getText(), 
                    formato.format(fecha_movilizacionCmBox.getDate()),
                    formato.format(fecha_devolucionCmBox.getDate()),
                    formato.format(new java.util.Date()),
                    observacion_moverCmBox.getText(),
                    "movilizacioncol",
                    "chikitovivas"); //Responsable de la transaccion        
                    //(String) responsable_mover.getSelectedItem(), responsable del activo

                        if(nuevo.insertar_movilizacion((String)responsable_mover.getSelectedItem(),(String)ubicacion_mover.getSelectedItem(),
                        (String)fisico_mover.getSelectedItem(),this.ubicacion_vij,this.fisico_vij,this.responsable_vij)){
                            JOptionPane.showMessageDialog(null, "Movilizacion agregada exitosamente.","Registro exitoso"
                                    ,JOptionPane.INFORMATION_MESSAGE);
                            Cambios CambiosBD = new Cambios(con);
                            rs = MovilizacionBD.getAll();
                            DefaultListModel list1 = new DefaultListModel();
                            // Anadimos cada una de las categorias al combobox Bienes
                           try {                        
                                while(rs.next()){
                                    list1.addElement("MovID: " +  rs.getString("idMovilizacion")+"   |   "+rs.getString("Codigo")+"-"+rs.getString("Familia")+"        "+rs.getString("Descripcion"));                            
                                }
                                rs = CambiosBD.getAll();
                                while(rs.next()){
                                    list1.addElement("CamID: " +  rs.getString("idCambios")+"   |   "+rs.getString("Codigo")+"-"+rs.getString("Familia")+"        "+rs.getString("Descripcion")); 
                                }
                                movilizacionesList.setModel(list1);
                            } catch (SQLException ex) {
                                Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }else{

                            JOptionPane.showMessageDialog(null, "No se pudo registrar la movilizacion", "Error al registrar"
                                    ,JOptionPane.ERROR_MESSAGE);

                        }    
                    }else{
                            JOptionPane.showMessageDialog(null, "Los campos (*) deben estar rellenados.","Warning"
                                    ,JOptionPane.WARNING_MESSAGE);

                    }

            }else{              //Editar movilizacion
                    SimpleDateFormat formato = new SimpleDateFormat("YYYY/MM/dd");
    /*
                    falta String Movilizacioncol,String username*/
                    Movilizacion actualizar = new Movilizacion(con, 
                    codigo_mover.getText(), 
                    (String) origen_moverCmBox.getSelectedItem(),
                    (String) destino_moverCmBox.getSelectedItem(), 
                    (String) motivo_moverComBox.getSelectedItem(),
                    detalle_mover.getText(), 
                    formato.format(fecha_movilizacionCmBox.getDate()),
                    formato.format(fecha_devolucionCmBox.getDate()),
                    formato.format(new java.util.Date()),
                    observacion_moverCmBox.getText(),
                    "movilizacioncol",
                    "chikitovivas",this.idCambiosMovilizacion); //Acomodar
                    System.out.println((String) motivo_moverComBox.getSelectedItem());
                    System.out.println((String) responsable_mover.getSelectedItem());
                    System.out.println((String) ubicacion_mover.getSelectedItem());
                    System.out.println((String) fisico_mover.getSelectedItem());
                    if(actualizar.actualizar_movilizacion(this.idMovilizacion,(String)responsable_mover.getSelectedItem(),(String)ubicacion_mover.getSelectedItem(),
                    (String)fisico_mover.getSelectedItem())){
                        JOptionPane.showMessageDialog(null, "Movilizacion actualizada exitosamente.","Actualizacion exitoso"
                                ,JOptionPane.INFORMATION_MESSAGE);
                    }else{

                        JOptionPane.showMessageDialog(null, "No se pudo actualizar la movilizacion", "Error al actualizar"
                                ,JOptionPane.ERROR_MESSAGE);

                    }                

            }        
        }else{  //Cambios
            SimpleDateFormat formato = new SimpleDateFormat("YYYY/MM/dd");
            if(flag_nuevo){     //cambio nuevo
                Movilizacion motivoBD = new Movilizacion(con);
                Cambios CambiosBD = new Cambios(con,
                        this.codigo_mover.getText(),
                        this.fisico_vij,
                        (String)fisico_mover.getSelectedItem(),
                        this.ubicacion_vij,
                        (String)ubicacion_mover.getSelectedItem(),
                        this.responsable_vij,
                        (String)responsable_mover.getSelectedItem(),
                        "chikitovivas", //Acomodar esto
                        motivoBD.getMotivo((String) motivo_moverComBox.getSelectedItem()),
                        formato.format(new java.util.Date()));
                if(CambiosBD.insertar_cambios(true)){
                    JOptionPane.showMessageDialog(null, "Cambio registrado exitosamente.","Registro exitoso"
                        ,JOptionPane.INFORMATION_MESSAGE);
                            rs = MovilizacionBD.getAll();
                            DefaultListModel list1 = new DefaultListModel();
                            // Anadimos cada una de las categorias al combobox Bienes
                            try {                        
                                while(rs.next()){
                                    list1.addElement("MovID: " +  rs.getString("idMovilizacion")+"   |   "+rs.getString("Codigo")+"-"+rs.getString("Familia")+"        "+rs.getString("Descripcion"));                            
                                }
                                rs = CambiosBD.getAll();
                                while(rs.next()){
                                    list1.addElement("CamID: " +  rs.getString("idCambios")+"   |   "+rs.getString("Codigo")+"-"+rs.getString("Familia")+"        "+rs.getString("Descripcion")); 
                                }
                                movilizacionesList.setModel(list1);
                            } catch (SQLException ex) {
                                Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
                            }
                }else{
                    JOptionPane.showMessageDialog(null, "No se pudo registrar la movilizacion", "Error al registrar"
                        ,JOptionPane.ERROR_MESSAGE);
                }
            }else{ // actualizar cambio
                Movilizacion motivoBD = new Movilizacion(con);
                Cambios CambiosBD = new Cambios(con);
                
                if(CambiosBD.actualizar_cambios(this.idCambiosMovilizacion,(String)ubicacion_mover.getSelectedItem(),
                        (String)fisico_mover.getSelectedItem(),(String)responsable_mover.getSelectedItem(),
                        motivoBD.getMotivo((String) motivo_moverComBox.getSelectedItem()),this.codigo_mover.getText(),true)){
                    JOptionPane.showMessageDialog(null, "Cambio actualizado exitosamente.","Actualizacion exitoso"
                        ,JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(null, "No se pudo actualizar la movilizacion", "Error al actualizar"
                        ,JOptionPane.ERROR_MESSAGE);
                }    
            }
        }

    }//GEN-LAST:event_guardar_moverActionPerformed

    private void movilizacionesListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_movilizacionesListMouseClicked
        if(this.movilizacionesList.getModel().getSize() != 0){//Entra en la condicion si hay mas de un Item en el ComboBox
            String[] parts = this.movilizacionesList.getSelectedValue().toString().split("   |   ");
            String[] p = parts[0].split(" ");
            String[] compare = p[0].split("I");
            System.out.println(compare[0]+ "compare");
            System.out.println(p[0]);
            System.out.println(p[1]);
            if(compare[0].equals("Mov")){ //Movilizacion
                this.bienes_Mover.clearSelection();
                this.movilizacionChckBox.setSelected(true);
                habilitar_movilizacion();
                flag_nuevo = false;
                //Buscar el id de Categoria con respecto a la descripcion
                Movilizacion cat = new Movilizacion(con);
                Status ubi = new Status(con);
                Ubicacion ubica = new Ubicacion(con);
                Usuario us = new Usuario(con);

                //Busqueda de DB, para la movilizacion seleccionada, y llenar los campos
                ResultSet cate = cat.getMovilizacion(p[1]);
                DefaultComboBoxModel model1; model1 = (DefaultComboBoxModel)ubicacion_mover.getModel();
                DefaultComboBoxModel model2; model2 = (DefaultComboBoxModel)fisico_mover.getModel();
                DefaultComboBoxModel model3; model3 = (DefaultComboBoxModel)origen_moverCmBox.getModel();
                DefaultComboBoxModel model4; model4 = (DefaultComboBoxModel)destino_moverCmBox.getModel();
                DefaultComboBoxModel model5; model5 = (DefaultComboBoxModel)responsable_mover.getModel();
                DefaultComboBoxModel model6; model6 = (DefaultComboBoxModel)motivo_moverComBox.getModel();
                try {
                    this.idCambiosMovilizacion = cate.getInt("idCambios");
                    this.fisico_vij = ubi.Status_fisica_by_id(cate.getInt("CFNva"));
                    this.ubicacion_vij = ubi.Status_ubicacion_by_id(cate.getInt("CUNva"));
                    this.responsable_vij = us.Username_by_id(cate.getInt("Responsable_nuevo"));                
                    this.idMovilizacion = cate.getInt("idMovilizacion");
                    this.codigo_mover.setText(cate.getString("Bien"));
                    //Lo tiene cambios
                    int index = model1.getIndexOf(ubi.Status_ubicacion_by_id(cate.getInt("CUNva")));
                    if (index != -1)
                    this.ubicacion_mover.setSelectedIndex(index);
                    index = model2.getIndexOf(ubi.Status_fisica_by_id(cate.getInt("CFNva")));
                    if (index != -1)
                    this.fisico_mover.setSelectedIndex(index);
                    index = model3.getIndexOf(cate.getString("Ubicacion_origen"));
                    if (index != -1)
                    this.origen_moverCmBox.setSelectedIndex(index);
                    index = model3.getIndexOf(cate.getString("Ubicacion_destino"));
                    if (index != -1)
                    this.destino_moverCmBox.setSelectedIndex(index);
                    index = model5.getIndexOf(us.Username_by_id(cate.getInt("Responsable_nuevo")));
                    if (index != -1)
                    this.responsable_mover.setSelectedIndex(index);
                    this.resp_mover.setText(us.Username_by_id(cate.getInt("Responsable_uso")));
                    this.descripcion_mover.setText(cate.getString("descripcion"));
                    this.detalle_mover.setText(cate.getString("Detalle_movilizacion"));
                    this.fecha_movilizacionCmBox.setDate(cate.getDate("Fecha_movilizacion"));
                    this.fecha_devolucionCmBox.setDate(cate.getDate("Fecha_devolucion"));
                    this.observacion_moverCmBox.setText(cate.getString("Observacion"));
                    index = model6.getIndexOf(cat.getMotivo_by_id(cate.getInt("Motivo")));
                    if (index != -1)
                    this.motivo_moverComBox.setSelectedIndex(index);
                } catch (SQLException ex) {
                    Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{  //Cambios
                this.bienes_Mover.clearSelection();
                this.movilizacionChckBox.setSelected(false);
                deshabilitar_movilizacion();
                flag_nuevo = false;
                Status ubi = new Status(con);
                Usuario us = new Usuario(con);
                Cambios cam = new Cambios(con);
                ResultSet cate = cam.getCambio(p[1]);
                DefaultComboBoxModel model1; model1 = (DefaultComboBoxModel)ubicacion_mover.getModel();
                DefaultComboBoxModel model2; model2 = (DefaultComboBoxModel)fisico_mover.getModel();
                DefaultComboBoxModel model5; model5 = (DefaultComboBoxModel)responsable_mover.getModel();     
                try {
                    this.idCambiosMovilizacion = cate.getInt("idCambios");
                    this.fisico_vij = ubi.Status_fisica_by_id(cate.getInt("CFNva"));
                    this.ubicacion_vij = ubi.Status_ubicacion_by_id(cate.getInt("CUNva"));
                    this.responsable_vij = us.Username_by_id(cate.getInt("Responsable_nuevo"));                
                    this.codigo_mover.setText(cate.getString("Bien_Codigo"));
                    this.descripcion_mover.setText(cate.getString("descripcion"));
                    //Lo tiene cambios
                    int index = model1.getIndexOf(ubi.Status_ubicacion_by_id(cate.getInt("CUNva")));
                    if (index != -1)
                    this.ubicacion_mover.setSelectedIndex(index);
                    index = model2.getIndexOf(ubi.Status_fisica_by_id(cate.getInt("CFNva")));
                    if (index != -1)
                    this.fisico_mover.setSelectedIndex(index);
 
                    index = model5.getIndexOf(us.Username_by_id(cate.getInt("Responsable_nuevo")));
                    if (index != -1)
                    this.responsable_mover.setSelectedIndex(index);
                    this.resp_mover.setText(us.Username_by_id(cate.getInt("Responsable_uso")));
                    if (index != -1)
                    this.motivo_moverComBox.setSelectedIndex(index);
                } catch (SQLException ex) {
                    Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_movilizacionesListMouseClicked

    private void bienes_MoverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bienes_MoverMouseClicked
        if(this.bienes_Mover.getModel().getSize() != 0){//Entra en la condicion si hay mas de un Item en el ComboBox
            Bien cat = new Bien(con);
            flag_nuevo = true;
            this.movilizacionesList.clearSelection();
            //Busqueda de DB, para la categoria seleccionada, y llenar los campos
            String[] parts = this.bienes_Mover.getSelectedValue().toString().split("-");
            String[] space = parts[1].split(" ");
            System.out.println(parts[0] +"/"+ space[0]+"/");
            ResultSet cate = cat.getBien(parts[0],space[0]);
            DefaultComboBoxModel model1; model1 = (DefaultComboBoxModel)ubicacion_mover.getModel();
            DefaultComboBoxModel model2; model2 = (DefaultComboBoxModel)fisico_mover.getModel();
            DefaultComboBoxModel model3; model3 = (DefaultComboBoxModel)origen_moverCmBox.getModel();
            DefaultComboBoxModel model4; model4 = (DefaultComboBoxModel)destino_moverCmBox.getModel();
            DefaultComboBoxModel model5; model5 = (DefaultComboBoxModel)responsable_mover.getModel();
            try {
                this.fisico_vij = cate.getString("con_fis");
                this.ubicacion_vij = cate.getString("con_ubi");
                this.responsable_vij = cate.getString("Username");
                this.codigo_mover.setText(cate.getString("codigo"));
                this.descripcion_mover.setText(cate.getString("descripcion"));
                this.resp_mover.setText(cate.getString("us_nombre") +" " +cate.getString("us_apellido") );
                int index = model1.getIndexOf(cate.getString("con_ubi"));
                if (index != -1)
                this.ubicacion_mover.setSelectedIndex(index);
                index = model2.getIndexOf(cate.getString("con_fis"));
                if (index != -1)
                this.fisico_mover.setSelectedIndex(index);
                index = model3.getIndexOf(cate.getString("ubicacion"));
                if (index != -1)
                this.origen_moverCmBox.setSelectedIndex(index);
                index = model4.getIndexOf(cate.getString("ubicacion"));
                if (index != -1)
                this.destino_moverCmBox.setSelectedIndex(index);
                fecha_movilizacionCmBox.setDate(new java.util.Date());
                fecha_devolucionCmBox.setDate(new java.util.Date());
                index = model5.getIndexOf(cate.getString("Username"));
                if (index != -1)
                this.responsable_mover.setSelectedIndex(index);
            } catch (SQLException ex) {
                Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_bienes_MoverMouseClicked

    private void movilizacionChckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movilizacionChckBoxActionPerformed
        if(movilizacionChckBox.isSelected()){
            habilitar_movilizacion();
        }else{
            deshabilitar_movilizacion();
        }
    }//GEN-LAST:event_movilizacionChckBoxActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try {
            agregarEditar_usuario usuario = new agregarEditar_usuario(con);
            usuario.setVisible(true);
            usuario.setLocationRelativeTo(null);
            usuario.setResizable(false);
        } catch (SQLException ex) {
            Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void salirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirBtnActionPerformed
        System.exit(0);
    }//GEN-LAST:event_salirBtnActionPerformed

    private void iniciar_listar(){
        rs = BienesBD.getAll();
        try {

            DefaultListModel list = new DefaultListModel();
            // Anadimos cada una de las categorias al combobox Bienes
            while(rs.next()){
                list.addElement(rs.getString("Codigo")+"-"+rs.getString("Familia")+"        "+rs.getString("Descripcion")); 
                System.out.println(rs.getString("Codigo")+"-"+rs.getString("Familia")+"        "+rs.getString("Descripcion"));
            }
            bienes_Listar.setModel(list);
            jPanel2.revalidate();
            jPanel2.repaint();
        } catch (SQLException ex) {
            Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    private void iniciar_mover(){
        //Se obtienen todas las descripciones de las Bienes
        ubicacion_mover.removeAllItems();
        fisico_mover.removeAllItems();
        origen_moverCmBox.removeAllItems();
        destino_moverCmBox.removeAllItems();
        responsable_mover.removeAllItems();
        motivo_moverComBox.removeAllItems();
        rs = BienesBD.getAll();
        try {
            DefaultListModel list = new DefaultListModel();
            // Anadimos cada una de las categorias al combobox Bienes
            while(rs.next()){
                list.addElement(rs.getString("Codigo")+"-"+rs.getString("Familia")+"        "+rs.getString("Descripcion")); 
            }
            bienes_Mover.setModel(list);
            /*--*/
            rs = MovilizacionBD.getAll();
            DefaultListModel list1 = new DefaultListModel();
            // Anadimos cada una de las categorias al combobox Bienes
            while(rs.next()){
                list1.addElement("MovID: " +  rs.getString("idMovilizacion")+"   |   "+rs.getString("Codigo")+"-"+rs.getString("Familia")+"        "+rs.getString("Descripcion")); 
            }
            Cambios CambiosBD = new Cambios(this.con);
            rs = CambiosBD.getAll();
            while(rs.next()){
                list1.addElement("CamID: " +  rs.getString("idCambios")+"   |   "+rs.getString("Codigo")+"-"+rs.getString("Familia")+"        "+rs.getString("Descripcion")); 
            }
            movilizacionesList.setModel(list1);
            /********************* Aqui se agregan todos los estados fisicos existentes en el ComboBox de Estado fisico ******************/
            rs = stmt.executeQuery("SELECT DISTINCT * FROM inventario.estatus_cond_fisica order by Descripcion;");
            rs.beforeFirst();

            while(rs.next()){
                fisico_mover.addItem(rs.getString("Descripcion"));
            }

            /********************* Aqui se agregan todas las ubicaciones fisicas existentes en el ComboBox de ubicacion fisica ******************/
            rs = stmt.executeQuery("SELECT DISTINCT * FROM inventario.estatus_cond_ubicacion order by Descripcion asc;");
            rs.beforeFirst();

            while(rs.next()){
                ubicacion_mover.addItem(rs.getString("descripcion"));
            }
            /********************* Aqui se agregan todas las ubicaciones existentes en el ComboBox de ubicacion ******************/
            rs = stmt.executeQuery("SELECT DISTINCT * FROM inventario.ubicacion order by descripcion asc;");
            rs.beforeFirst();

            while(rs.next()){
                origen_moverCmBox.addItem(rs.getString("descripcion"));
                destino_moverCmBox.addItem(rs.getString("descripcion"));
            }
            /********************* Aqui se agregan todos los responsables existentes en el ComboBox de responsables ******************/
            rs = stmt.executeQuery("SELECT DISTINCT * FROM inventario.usuario where Estatus_usuario = 1  order by Username asc;");
            rs.beforeFirst();

            while(rs.next()){
                responsable_mover.addItem(rs.getString("Username"));
            }
            /********************* Aqui se agregan todos los motivos de movilizacion existentes en el ComboBox de responsables ******************/
            rs = stmt.executeQuery("SELECT DISTINCT * FROM inventario.motivo_movilizacion order by descripcion asc;");
            rs.beforeFirst();

            while(rs.next()){
                motivo_moverComBox.addItem(rs.getString("Descripcion"));
            }
            jPanel2.revalidate();
            jPanel2.repaint();
        } catch (SQLException ex) {
            Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    //Chikito amigo
    
    private void iniciar_panel(){
        
        GridBagConstraints constraints = new GridBagConstraints();
        JPanel calzo = new JPanel();
        PanelPrincipal.setLayout(new GridBagLayout());
        PanelPrincipal.removeAll();
        constraints.gridx = 0; // El área de texto empieza en la columna cero.
        constraints.gridy = 0;
        constraints.gridwidth = 1; // El área de texto ocupa dos columnas
        constraints.fill = GridBagConstraints.BOTH;
        constraints.weightx = 1.0;
        constraints.weighty = 1.0;
        PanelPrincipal.add(PanelBienes,constraints);

        constraints.gridx = 0;
        constraints.gridy = 0; // El área de texto empieza en la columna cero.
        constraints.gridwidth = 0; // El área de texto ocupa dos columnas.
        constraints.fill = GridBagConstraints.NONE;
        constraints.weightx = 0.0;
        constraints.weighty = 0.0;
        PanelPrincipal.add(calzo,constraints);
        PanelPrincipal.revalidate();
        PanelPrincipal.repaint();
        
    }
    
    private void iniciar_agregarActivo (){
        codigoTxt.setText("");
        nombreTxt.setText("");
        precioRefText.setText("");
        costo_actual.setText("");
        fechaAdqiDChoser.setDate(new java.util.Date());
        guardarBtn.setText("Guardar");
        editarBtn.setText("Editar");
        codigoTxt.setEditable(true);
        try {
            
            /********************* Aqui se agregan todas las familias existentes en el ComboBox de categoria ******************/
            rs = stmt.executeQuery("SELECT * FROM inventario.familia order by Descripcion asc;");
            rs.beforeFirst();
            
            while(rs.next()){
                categoriaCmBox.addItem(rs.getString("Descripcion"));
            }
            
            /********************* Aqui se agregan todas las ubicaciones existentes en el ComboBox de ubicacion ******************/
            rs = stmt.executeQuery("SELECT * FROM inventario.ubicacion order by descripcion asc;");
            rs.beforeFirst();
            
            while(rs.next()){
                ubicacionCmBox.addItem(rs.getString("descripcion"));
            }
            
            /********************* Aqui se agregan todos los proveedores existentes en el ComboBox de proveedor ******************/
            rs = stmt.executeQuery("SELECT * FROM inventario.proveedor_donante order by Razon_social asc;");
            rs.beforeFirst();
            
            while(rs.next()){
                proveedorCmBox.addItem(rs.getString("Razon_social"));
            }
            
            /********************* Aqui se agregan todos los responsables existentes en el ComboBox de responsables ******************/
            rs = stmt.executeQuery("SELECT * FROM inventario.usuario where Estatus_usuario = 1  order by Username asc;");
            rs.beforeFirst();
            
            while(rs.next()){
                responsableCmbox.addItem(rs.getString("Username"));
            }
            
            /********************* Aqui se agregan todos los propietario existentes en el ComboBox de propietarios ******************/
            rs = stmt.executeQuery("SELECT * FROM inventario.propietario order by Razon_social asc;");
            rs.beforeFirst();
            
            while(rs.next()){
                propietarioCmbox.addItem(rs.getString("Razon_social"));
            }
            
            
            /********************* Aqui se agregan todos los estados fisicos existentes en el ComboBox de Estado fisico ******************/
            rs = stmt.executeQuery("SELECT * FROM inventario.estatus_cond_fisica order by Descripcion;");
            rs.beforeFirst();
            
            while(rs.next()){
                statusFisicoCmbox.addItem(rs.getString("Descripcion"));
            }
            
            /********************* Aqui se agregan todas las ubicaciones fisicas existentes en el ComboBox de ubicacion fisica ******************/
            rs = stmt.executeQuery("SELECT * FROM inventario.estatus_cond_ubicacion order by Descripcion asc;");
            rs.beforeFirst();
            
            while(rs.next()){
                statusUbiCmbox.addItem(rs.getString("descripcion"));
            }
            
            agregarActivoPanel.revalidate();
            agregarActivoPanel.repaint();
            
        } catch (SQLException ex) {
            Logger.getLogger(Index.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void acomodar_movilizaciones(){
        
        GridBagConstraints constraints = new GridBagConstraints();
        jPanel3.setLayout(new GridBagLayout());
        jPanel3.removeAll();
        constraints.gridx = 0; // El área de texto empieza en la columna cero.
        constraints.gridy = 0;
        constraints.gridwidth = 1; // El área de texto ocupa dos columnas
        constraints.fill = GridBagConstraints.NONE;
        constraints.weightx = 1.0;
        constraints.weighty = 1.0;
        jPanel3.add(jPanel12,constraints);
        
        constraints.gridx = 1;
        constraints.gridy = 0; // El área de texto empieza en la columna cero.
        constraints.gridwidth = 0; // El área de texto ocupa dos columnas.
        constraints.fill = GridBagConstraints.NONE;
        constraints.weightx = 0.0;
        constraints.weighty = 0.0;
        jPanel3.add(jPanel6,constraints);
        jPanel3.revalidate();
        jPanel3.repaint();
    }
    
    private void habilitar_movilizacion(){
        motivo_moverComBox.setEnabled(true);
        origen_moverCmBox.setEnabled(true);
        destino_moverCmBox.setEnabled(true);
        fecha_movilizacionCmBox.setEnabled(true);
        fecha_devolucionCmBox.setEnabled(true);
        observacion_moverCmBox.setEnabled(true);
    }
    
    private void deshabilitar_movilizacion(){
        motivo_moverComBox.setEnabled(false);
        origen_moverCmBox.setEnabled(false);
        destino_moverCmBox.setEnabled(false);
        fecha_movilizacionCmBox.setEnabled(false);
        fecha_devolucionCmBox.setEnabled(false);
        observacion_moverCmBox.setEnabled(false);
    }
    
    private void tipo_usuario(){
    }
    
   /* private void inicializarMoverActivo () {
        rs = stmt.executeQuery(sql);
    } */
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                /*Look And Feel de Windows para el programa*/
                try {
                    javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());  
                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(InventarioH.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BienPanel;
    private javax.swing.JPanel BienPanel1;
    private javax.swing.JLabel Categorialbl;
    private javax.swing.JLabel CodigoLbl;
    private javax.swing.JLabel CodigoLbl1;
    private javax.swing.JLabel Codigolbl;
    private javax.swing.JLabel Costolbl;
    private javax.swing.JTextArea Descripcion;
    private javax.swing.JTextArea Descripcion1;
    private javax.swing.JButton EditarBtn1;
    private javax.swing.JPanel EstadosPanel;
    private javax.swing.JPanel EstadosPanel1;
    private javax.swing.JLabel Fecha;
    private javax.swing.JLabel FechaAdquiLbl;
    private javax.swing.JLabel FechaAdquiLbl1;
    private javax.swing.JLabel Fechalbl;
    private javax.swing.JLabel FiscStalbl;
    private javax.swing.JLabel NombreLbl;
    private javax.swing.JLabel NombreLbl1;
    private javax.swing.JLabel Nombrelbl;
    private javax.swing.JTabbedPane PanelBienes;
    private javax.swing.JPanel PanelPrincipal;
    private javax.swing.JLabel PrecioRefLbl;
    private javax.swing.JLabel PrecioRefLbl1;
    private javax.swing.JLabel Preciolbl;
    private javax.swing.JLabel Propietario;
    private javax.swing.JLabel Propietario1;
    private javax.swing.JLabel Propietariolbl;
    private javax.swing.JLabel ProveedorLbl;
    private javax.swing.JLabel ProveedorLbl1;
    private javax.swing.JLabel Proveedorlbl;
    private javax.swing.JLabel ResponsableLbl;
    private javax.swing.JLabel ResponsableLbl1;
    private javax.swing.JLabel Responsablelbl;
    private javax.swing.JButton SalirBtn;
    private javax.swing.JButton SalirBtn1;
    private javax.swing.JLabel StatusFisicoLbl;
    private javax.swing.JLabel StatusFisicoLbl1;
    private javax.swing.JLabel StatusUbiLbl;
    private javax.swing.JLabel StatusUbiLbl1;
    private javax.swing.JLabel UbiStatlbl;
    private javax.swing.JLabel Ubicacionlbl;
    private javax.swing.JPanel UsuariosPanel;
    private javax.swing.JPanel UsuariosPanel1;
    private javax.swing.JPanel agregarActivoPanel;
    private javax.swing.JList bienes_Listar;
    private javax.swing.JList bienes_Mover;
    private javax.swing.JComboBox categoriaCmBox;
    private javax.swing.JTextField codigoTxt;
    private javax.swing.JLabel codigo_mover;
    private javax.swing.JTextField costo_actual;
    private javax.swing.JLabel descripcion_mover;
    private javax.swing.JComboBox destino_moverCmBox;
    private javax.swing.JTextArea detalle_mover;
    private javax.swing.JButton editarBtn;
    private javax.swing.JMenuItem estatusMenuItem;
    private javax.swing.JMenuItem familiaMenuItem;
    private com.toedter.calendar.JDateChooser fechaAdqiDChoser;
    private com.toedter.calendar.JDateChooser fecha_devolucionCmBox;
    private com.toedter.calendar.JDateChooser fecha_movilizacionCmBox;
    private javax.swing.JComboBox fisico_mover;
    private javax.swing.JButton guardarBtn;
    private javax.swing.JButton guardar_mover;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JComboBox motivo_moverComBox;
    private javax.swing.JCheckBox movilizacionChckBox;
    private javax.swing.JList movilizacionesList;
    private javax.swing.JTextField nombreTxt;
    private javax.swing.JTextArea observacion_moverCmBox;
    private javax.swing.JComboBox origen_moverCmBox;
    private javax.swing.JTextField precioRefText;
    private javax.swing.JComboBox propietarioCmbox;
    private javax.swing.JMenuItem propietarioMenuItem;
    private javax.swing.JComboBox proveedorCmBox;
    private javax.swing.JMenuItem proveedoresMenuItem;
    private javax.swing.JLabel resp_mover;
    private javax.swing.JComboBox responsableCmbox;
    private javax.swing.JComboBox responsable_mover;
    private javax.swing.JButton salirBtn;
    private javax.swing.JComboBox statusFisicoCmbox;
    private javax.swing.JComboBox statusUbiCmbox;
    private javax.swing.JComboBox ubicacionCmBox;
    private javax.swing.JMenuItem ubicacionMenuItem;
    private javax.swing.JComboBox ubicacion_mover;
    // End of variables declaration//GEN-END:variables
}
